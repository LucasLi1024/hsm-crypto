#cmake_minimum_required(VERSION 3.10)
#project(test-sdf-crypto VERSION "0.1.0")

#set(SDF_CRYPTO_CMAKE_DIR "${CMAKE_CURRENT_LIST_DIR}/cmake" CACHE PATH "The path to the cmake directory")
#list(APPEND CMAKE_MODULE_PATH ${SDF_CRYPTO_CMAKE_DIR})
#include(Dependencies)
###include(ProjectHSM)
#set(CMAKE_CXX_STANDARD 11) 
#set(INK_DIR ${CMAKE_CURRENT_LIST_DIR}/lib/swsds)
#set(LIB_DIR ${CMAKE_CURRENT_LIST_DIR}/lib/libswsds)
#include_directories(${INK_DIR})
#link_directories(${LIB_DIR})
#link_libraries(swsds)
# target_link_libraries(sdf-crypto PUBLIC libsdf/swsds.so)

file(GLOB_RECURSE HEADERS "*.h")
file(GLOB_RECURSE SRC_LIST "*.cpp")
list(APPEND SRC_LIST ${INSERT_SOURCES})
add_library(sdf-crypto_arm SHARED ${SRC_LIST} ${HEADERS})
#eth_use(sdf-crypto_arm OPTIONAL HSM)

#target_link_libraries(sdf-crypto_arm PUBLIC ${SDF_LIB})
target_link_libraries(sdf-crypto_arm PUBLIC SDF)

#messsage("*** ${CMAKE_SOURCE_DIR}/deps/lib/libswsds.so")
#get_target_property(TARGET_LIBRARIES sdf-crypto_arm LINK_LIBRARIES)
#message("(((((((( ${TARGET_LIBRARIES}")
#LIST(REMOVE_ITEM TARGET_LIBRARIES "../../deps/lib/libswsds.so")
#set_property(TARGET sdf-crypto_arm PROPERTY LINK_LIBRARIES ${TARGET_LIBRARIES} )
#add_executable(${PROJECT_NAME} TestSDF.cpp)
#target_link_libraries(${PROJECT_NAME} sdf-crypto_arm)
